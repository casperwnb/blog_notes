* 游戏发展史
** 重要的游戏
第一款电子游戏(即主机游戏), 是1952年面世的. 是一个井字棋. 6年后出现了简陋的网球游戏.

第一款电脑游戏是1962年面世的《太空战争》.

** 游戏分类
从硬件上来分, 主要有4类

1. 主机游戏 - Console Game
   如XBox, PS, Switch, N64, Wii等. 这类游戏的硬件可以插在电视或显示器上.
2. 电脑游戏
3. 移动游戏
   如Pad上的游戏, 手机游戏等
4. 电视机游戏
   这类一般需要用电视机的遥控器玩.

** 2D游戏
2D游戏涉及最基本的图形、图像知识.
2D游戏涉及最核心的网络呈现过程.

斜45度角的视角游戏("伪3D"游戏).

2D斜45度角的后期, 一般都使用3D建模, 然后将它转换成2D图形来进行制作. 因为在2D角度下, 有一个很细节
的问题, 即左右手脚的交换. 如: 如果角色右手拿着武器, 往左边走, 当它往右走的时候, 为了节省资源和编程
的方便, 会对人物进行镜像绘制, 就变成左手拿着武器了.

到了后期的2D游戏中, 会通过3D建模, 制作大量的非镜像图片来契合左右手的限制.
借助3D引擎可以提升2D游戏的声光和特效效果

** 2D与3D的区别
AR/VR 都属于3D.

1. 画面呈现
   要做出一款好的2D游戏, 要比3D游戏下更多的功夫, 特别是在游戏的内涵、创意、音乐和细节上面.
2. 文件体积

** 伪3D游戏
基本上是通过模拟计算和光线跟踪算法做出来的, 因此2D游戏引擎无法制作狭义的3D游戏, 而3D游戏引擎则
可以做2D游戏.
   
研究伪3D技术的网站:
http://www.extentofthejam.com/pseudo/
https://lodev.org/cgtutor/raycasting.html
https://codeincomplete.com/posts/javascript-racer-v1-straight/
* 游戏引擎
** 定义
指一些已编写好的可以编辑电脑游戏系统或一些交互实时图像应用程序的核心组件. 这些系统为游戏设计者提供
各种编写游戏所需的各种工具, 其目的在于让游戏设计者能容易和快速地做出游戏.

大多数游戏引擎都包含以下系统:
渲染引擎、物理引擎、碰撞检测系统、音效、脚本引擎、电脑动画、人工智能、网络引擎以及场景管理.

** 工作
在代码层面, 游戏引擎是对绘图接口、操作系统、音频等接口进行的代码层面的封装
在工具层面, 游戏引擎是对一整套游戏内容的制作工具, 方便制作针对这个引擎的游戏内容

** pygame
pygame是python封装的游戏库, 可以很方便的利用pygame进行2D游戏的编写. 其背后调用的就是SDL的接口.
