* kubernetes环境搭建与kubeadm
[[file:content/kubernetes_frame_kubeadm.org][kubernetes及其环境搭建与kubeadm]]

* kubernetes-Pod
[[file:content/kubernetes_pod.org][kubernetes中的Pod]]

* 编排 - "控制器"模型
[[file:content/kubernetes_controllermode.org][容器编排的"控制器"模型]]
* StatefulSet
[[file:content/kubernetes_statefulset.org][StatefulSet]]

* kubernetes常用命令
kubectl get namespaces  # 获取命名空间

kubectl get pods # 获取默认命名空间下的pods信息
kubectl get pod --all-namespaces -o wide  # 查看所有pod的状态, -o wide 可以展示更多信息

kubectl get nodes  # 查看节点信息
kubectl describe node master  # 查看master节点的详细信息
kubectl get pods -n kube-system  # 查看节点上各个系统Pod的状态, kube-system是kubernetes项目预留
的系统Pod的工作空间(不是Linux Namespace, 只是kubernetes划分不同工作空间的单位)

kubectl taint nodes --all node-role.kubernetes.io/master-  # 删除默认的taint, 其中的"-"表示移除
所有以"node-role.kubernetes.io/master"为键的taint
kubectl taint nodes <nodename> key=value：NoSchedule  # 给某个节点打上taint

kubectl describe pods  # 查看默认命名空间下的pods的信息
kubectl describe pod <podname> --namespace=<namespace>  # 查看pod的具体信息
kubectl get pods -l app=nginx  # -l的值是labels标签中定义的键-元素对

kubectl logs <POD_NAME>  # 查看某个pod的日志信息
kubectl exec -ti <podname> <cmd>  # 在某个pod中执行命令
kubectl attach -ti <podname> -c <cmd>  # 在pod中执行命令

kubectl get services  # 查看服务状态
kubectl label pod <podname> app=v1  # 给podname添加对应的标签
kubeadm token list  # 查看kubeadmin token信息
kubectl get secrets

kubectl create -f <xx.yaml>  # 创建对象
kubectl replace -f <xx.yaml>  # 升级对象
kubectl apply -f <xx.yaml>  # 执行对象的升级或创建
kubectl delete -f <xx.yaml>  # 删除

kubectl exec -ti <pod-name> -- <cmd>  # 在某个pod中执行命令

kubectl create secret generic <key> --from-file=<xx.txt>  # 创建secret对象
kubectl get secret  # 获取secret
kubectl delete secret <secretname>  # 删除secret

kubectl create configmap <configmap-name> --from-file=xxx.txt
kubectl get configmap
kubectl logs -f <pod-name>  # 查看某个pod的日志输出

kubectl scale deployment <deploymenname> --replicas=<x>  # 扩展或收缩
kubectl apply -f <xx.yaml> --record  # 记录每次操作所执行的命令

kubectl get deployment  # 查看deployment信息
kubectl rollout status deployment/<deployment-name>  # 获取deployment的升级信息
kubectl edit deployment/<deployment-name>  # 编辑deployment信息
kubectl set image deployment <deployment-name> nginx=nginx:1.91  # 设置nginx的镜像为nginx:1.91
kubectl rollout undo deployment <deployment-name>  # 回滚到上一个版本
kubectl rollout history deployment <deployment-name>  # 查看操作历史
kubectl rollout history deployment <deployment-name> --revision=x  # 查看具体某个版本的操作信息
kubectl rollout undo deployment <deployment-name> --to-revision=x  # 回滚到指定的版本
kubectl rollout pause deployment <deployment-name>  # 暂停某个deployment
kubectl rollout resume deploy <deployment-name>  # 恢复某个deployment记录

kubectl get rs  # 获取replicaset信息
kubectl get statefulset  # 查看statefulset信息

# 在某个namespace下,临时运行一个Pod
kubectl run -i --tty --image busybox dns-test --restart=Never --rm /bin/sh --namespace xx


* 在线交互环境
https://kubernetes.io/docs/tutorials/kubernetes-basics

https://github.com/huan9huan/k8s-practice: 别人的笔记

kubeadm join 10.211.55.4:6443 --token xctjyz.9b2dw4f3deyw4cdc \
--discovery-token-ca-cert-hash \
sha256:1db8f64748875d822a7b06a961b01f3427628295008102e4f8599f61af9ea8ff

# swap
kubeadm join 10.211.55.6:6443 --token i277go.47nv5y1zxnyamqge \
--discovery-token-ca-cert-hash \
sha256:614f69cb5af1f5299d1ea68d3eac6f3c767d8d2e59d24aa4f4c64bf176bb60ec

* kubernetes周边
[[https://github.com/gjmzj/kubeasz][使用ansible部署k8s]]
[[https://github.com/SongCF/kubesh][k8s集群安装脚本]]
https://github.com/anjia0532/gcr.io_mirror: k8s.gcr.io镜像
[[https://github.com/kubernetes-incubator/kubespray][k8s集群]]

