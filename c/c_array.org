* 数组
** 定义
数组是一种线性表数据结构. 它用一组连续的内存空间, 来存储一组具有相同类型的数据

** 定义中的关键词
1. 线性表(Linear List)
   数据排成像一条线一样的结构. 每个线性表上的数据最多只有前和后两个方向.
   数组、链表、队列、栈等也是线性表结构.

   与之对应的就是非线性关系, 如二叉树、堆、图等.
   在非线性表中, 数据之间并不是简单的前后关系.
2. 连续的内存空间和相同类型的数据
   
** 其他
很多时候并不是要去死记硬背某个数据结构或者算法, 而是学习它背后的思想和处理技巧, 这些才是最优价值的

JVM标记清除算法.

** 代码
#+BEGIN_SRC c
#include <stdio.h>

int main() {
    int i;
    int arr[3] = {0};
    for(;i<=3; i++) {
        arr[i] = 0;
        printf("Hello, World\n");
    }
    return 0;
}

// gcc test.c -fno-stack-protector # 这样会无限循环
// https://www.ibm.com/developerworks/cn/linux/l-cn-gccstack/index.html
#+END_SRC
程序编译后会无限循环, 建议去查函数调用的栈桢结构细节. 原因是:
函数体内的局部变量存在栈上, 且是连续压栈. 在Linux进程的内存布局中, 栈区在高地址空间,
从高向低增长. 变量i和arr在相邻地址, 且i比arr的地址大, 所以arr越界正好访问到i.
当然, 前提是i和arr元素同类型, 否则那段代码仍是未决行为.

* 链表
如何判断一个字符串是否是回文字符串, 如果字符串是基于单链表来存储的, 该如何来判断是一个回文串呢.
