* sizeof
1. 在c++中定义一个空的类型, 里面没有任何成员变量和成员函数, 则sizeof该结构体得到的值是多少?

答案是:1, 原因: 空类型的实例中不包含任何信息, 本来求值应该是0, 但声明该类型的实例的时候必须在内存
中占用一定的空间, 否则无法使用这些实例, 至于占多少空间由编译器决定.

2. 如果在该类型中添加一个构造函数和析够函数, 则sizeof该类型得到的值是多少?
答案: 1, 调用构造和析够函数只需要知道函数的地址即可, 这些函数的地址只与类型相关, 与类型的实例无关
编译器不会因为这两个函数而在实例内添加任何额外信息.

3. 将析够函数标记为虚函数
C++编译器一旦发现一个类型种由虚函数, 就会为该类生成一个虚函数表, 并在该类型的每个实例中添加一个
指向虚函数表的指针, 因此需要一个指针的大小.

* 复制构造函数
#+BEGIN_SRC c++
#include <iostream>
using namespace std;

class A {
    private:
        int value;
    public:
        A(int n) {value = n;}
        A(A other) {
            value = other.value;
        }
        void Print() {
            cout<<value<<endl;
        }
};

int main() {
    A a = 10;
    A b = a;
    b.Print();
    return 0;
}
#+END_SRC
代码编译错误, b = a, 会调用复制构造函数, 由于是传值参数, 就会在复制构造函数内调用复制构造函数,
会形成递归, 导致栈溢出.

